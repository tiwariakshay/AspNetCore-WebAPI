// <auto-generated />
using CityInfo.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new { Id = 1, Description = "Canada Capital City", Name = "Toronto" },
                        new { Id = 2, Description = "Majotiry of Indian Society lives", Name = "Brampton" },
                        new { Id = 3, Description = "The place with scenic beauty", Name = "Calgary" }
                    );
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfIntrest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfIntrests");

                    b.HasData(
                        new { Id = 1, CityId = 1, Description = "Iconic tower with revolving restaurant", Name = "CN Tower" },
                        new { Id = 2, CityId = 1, Description = "Huge range of  cultures", Name = "Royal Museum" },
                        new { Id = 3, CityId = 1, Description = "Stately castle and gardens", Name = "Casa Loma" },
                        new { Id = 4, CityId = 2, Description = "River, Marsh, park and garden", Name = "Humber River" },
                        new { Id = 5, CityId = 2, Description = "Wetlands and Ziplines", Name = "Heart Lake" },
                        new { Id = 6, CityId = 3, Description = "City Vitas and revolving restaurant", Name = "Calgary Tower" },
                        new { Id = 7, CityId = 3, Description = "Live animals and dianasaur displays", Name = "Calgary Zoo" }
                    );
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfIntrest", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "City")
                        .WithMany("PointOfIntrests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
